name: Release
on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.build.outputs.version}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 1.13
        uses: actions/setup-java@v1
        with:
          java-version: 1.13

      - name: Build with Maven
        id: build
        run: |
          mvn versions:set -DnewVersion=${{ github.event.release.tag_name }}
          mvn clean package -Pprod -DskipTests
          export VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=version::${VERSION}

      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: kafka-ui-api/target/kafka-ui-api-${{ steps.build.outputs.version }}.jar
          tag: ${{ github.event.release.tag_name }}

      - name: Archive JAR
        uses: actions/upload-artifact@v3
        with:
          name: kafka-ui-${{ steps.build.outputs.version }}
          path: kafka-ui-api/target/kafka-ui-api-${{ steps.build.outputs.version }}.jar


  charts:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1


      - name: update chart version
        run: |
          echo ${{needs.release.outputs.version}}
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: Narekmat/kafka-ui
          event-type: my-event
          client-payload: '{"appversion": "${{needs.release.outputs.version}}"}'    