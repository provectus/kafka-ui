name: e2e-checks
on:
  pull_request_target:
    types: [ "opened", "edited", "reopened", "synchronize" ]
    paths:
      - "kafka-ui-api/**"
      - "kafka-ui-contract/**"
      - "kafka-ui-react-app/**"
      - "kafka-ui-e2e-checks/**"
      - "pom.xml"
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set the values
        id: set_env_values
        run: |
          cat "./kafka-ui-e2e-checks/.env.ci" >> "./kafka-ui-e2e-checks/.env"

      - name: pull docker
        id: pull_chrome
        run: |
          docker pull selenium/standalone-chrome:103.0

      - name: Set up JDK 1.13
        uses: actions/setup-java@v1
        with:
          java-version: 1.13

      - name: Build with Maven
        id: build_app
        run: |
          mvn versions:set -DnewVersion=${{ github.event.pull_request.head.sha }}
          mvn clean package -Pprod -Dmaven.test.skip=true ${{ github.event.inputs.extraMavenOptions }}

      - name: compose app
        id: compose_app
        # use the following command until #819 will be fixed
        run: |
          docker-compose -f ./documentation/compose/e2e-tests.yaml up -d

      - name: e2e run
        run: |
          mvn versions:set -DnewVersion=${{ github.event.pull_request.head.sha }}
          mvn -DQASEIO_API_TOKEN=${{ secrets.QASEIO_API_TOKEN }} -pl '!kafka-ui-api' test -Pprod

  publish_report:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v2
        if: always()

      - name: Restore static
        uses: actions/download-artifact@v2
        with:
          path: kafka-ui-e2e-checks/allure-results

      - name: Get Allure history
        uses: actions/checkout@v2
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: kafka-ui-e2e-checks/allure-results/artifact
          allure_history: allure-history-web
          keep_reports: 10
          subfolder: results

      - name: Deploy report to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history-web

      - name: Post the link to report
        uses: Sibz/github-status-action@v1.1.6
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: "e2e-checks / Click Details button to open Allure report"
          state: "success"
          sha: ${{ github.event.pull_request.head.sha  || github.sha }}
          target_url: https://${{ github.repository_owner }}.github.io/kafka-ui/allure/allure-results/${{ github.run_number }}

  docker_logs:
    needs: publish_report
    runs-on: ubuntu-latest
    steps:
      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2.2.1
