openapi: 3.0.0
info:
  description: Api Documentation
  version: 0.1.0
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
tags:
  - name: /api/clusters
servers:
  - url: /localhost

paths:
  /api/clusters:
    get:
      tags:
        - /api/clusters
      summary: getClusters
      operationId: getClusters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster'

  /api/clusters/{clusterName}/brokers:
    get:
      tags:
        - /api/clusters
      summary: getBrokers
      operationId: getBrokers
      parameters:
        - name: clusterName
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Broker'

  /api/clusters/{clusterName}/metrics/broker:
    get:
      tags:
        - /api/clusters
      summary: getBrokersMetrics
      operationId: getBrokersMetrics
      parameters:
        - name: clusterName
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokersMetrics'

  /api/clusters/{clusterName}/topics:
    get:
      tags:
        - /api/clusters
      summary: getTopics
      operationId: getTopics
      parameters:
        - name: clusterName
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
    post:
      tags:
        - /api/clusters
      summary: createTopic
      operationId: createTopic
      parameters:
        - name: clusterName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicFormData'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'

  /api/clusters/{clusterName}/topics/{topicName}:
    get:
      tags:
        - /api/clusters
      summary: getTopicDetails
      operationId: getTopicDetails
      parameters:
        - name: clusterName
          in: path
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicDetails'

  /api/clusters/{clusterName}/topics/{topicName}/config:
    get:
      tags:
        - /api/clusters
      summary: getTopicConfigs
      operationId: getTopicConfigs
      parameters:
        - name: clusterName
          in: path
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicConfig'

  /api/clusters/{clusterName}/consumerGroups:
    get:
      tags:
        - /api/clusters
      summary: getConsumerGroup
      operationId: getConsumerGroup
      parameters:
        - name: clusterName
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsumerGroup'

components:
  schemas:
    Cluster:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        defaultCluster:
          type: boolean
        status:
          $ref: '#/components/schemas/ServerStatus'
        brokerCount:
          type: integer
        onlinePartitionCount:
          type: integer
        topicCount:
          type: integer
        bytesInPerSec:
          type: integer
        bytesOutPerSec:
          type: integer
      required:
        - id
        - name
        - status

    ServerStatus:
      type: string
      enum:
        - online
        - offline

    BrokersMetrics:
      type: object
      properties:
        brokerCount:
          type: integer
        zooKeeperStatus:
          type: integer
        activeControllers:
          type: integer
        uncleanLeaderElectionCount:
          type: integer
        onlinePartitionCount:
          type: integer
        underReplicatedPartitionCount:
          type: integer
        offlinePartitionCount:
          type: integer
        inSyncReplicasCount:
          type: integer
        outOfSyncReplicasCount:
          type: integer

    Topic:
      type: object
      properties:
        name:
          type: string
        internal:
          type: boolean
        partitions:
          type: array
          items:
            $ref: '#/components/schemas/Partition'

    Partition:
      type: object
      properties:
        partition:
          type: integer
        leader:
          type: integer
        replicas:
          type: array
          items:
            $ref: '#/components/schemas/Replica'

    Replica:
      type: object
      properties:
        broker:
          type: integer
        leader:
          type: boolean
        inSync:
          type: boolean

    TopicDetails:
      type: object
      properties:
        partitionCount:
          type: integer
        replicationFactor:
          type: integer
        replicas:
          type: integer
        inSyncReplicas:
          type: integer
        bytesInPerSec:
          type: integer
        segmentSize:
          type: integer
        segmentCount:
          type: integer
        underReplicatedPartitions:
          type: integer

    TopicConfig:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        defaultValue:
          type: string

    TopicFormData:
      type: object
      properties:
        name:
          type: string
        partitions:
          type: integer
        replicationFactor:
          type: integer
        configs:
          type: object
          additionalProperties:
            type: string

    Broker:
      type: object
      properties:
        id:
          type: string

    ConsumerGroup:
      type: object
      properties:
        clusterId:
          type: string
        consumerGroupId:
            type: string
        numConsumers:
            type: integer
        numTopics:
            type: integer