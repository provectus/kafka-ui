// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`List when it does not have readonly flag matches the snapshot 1`] = `
<StaticRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    staticContext={Object {}}
  >
    <Component
      theme={
        Object {
          "buttonStyles": Object {
            "fontSize": Object {
              "L": "16px",
              "M": "14px",
              "S": "14px",
            },
            "height": Object {
              "L": "40px",
              "M": "32px",
              "S": "24px",
            },
            "primary": Object {
              "backgroundColor": Object {
                "active": "#1414B8",
                "hover": "#1717CF",
                "normal": "#4F4FFF",
              },
              "color": "#FFFFFF",
              "invertedColors": Object {
                "active": "#1414B8",
                "hover": "#1717CF",
                "normal": "#4F4FFF",
              },
            },
            "secondary": Object {
              "backgroundColor": Object {
                "active": "#D5DADD",
                "hover": "#E3E6E8",
                "normal": "#F1F2F3",
              },
              "color": "#171A1C",
              "invertedColors": Object {
                "active": "#171A1C",
                "hover": "#454F54",
                "normal": "#73848C",
              },
            },
          },
          "menuStyles": Object {
            "backgroundColor": Object {
              "active": "#E3E6E8",
              "hover": "#F1F2F3",
              "normal": "#FFFFFF",
            },
            "color": Object {
              "active": "#171A1C",
              "hover": "#73848C",
              "normal": "#73848C",
            },
          },
          "paginationStyles": Object {
            "borderColor": Object {
              "active": "#454F54",
              "disabled": "#C7CED1",
              "hover": "#73848C",
              "normal": "#ABB5BA",
            },
            "color": Object {
              "active": "#171A1C",
              "disabled": "#C7CED1",
              "hover": "#171A1C",
              "normal": "#171A1C",
            },
          },
          "primaryTabStyles": Object {
            "borderColor": Object {
              "active": "#4F4FFF",
              "hover": "transparent",
              "normal": "transparent",
            },
            "color": Object {
              "active": "#171A1C",
              "hover": "#171A1C",
              "normal": "#73848C",
            },
          },
          "secondaryTabStyles": Object {
            "backgroundColor": Object {
              "active": "#E3E6E8",
              "hover": "#F1F2F3",
              "normal": "#FFFFFF",
            },
            "color": Object {
              "active": "#171A1C",
              "hover": "#171A1C",
              "normal": "#73848C",
            },
          },
          "selectStyles": Object {
            "borderColor": Object {
              "active": "#454F54",
              "disabled": "#E3E6E8",
              "hover": "#73848C",
              "normal": "#ABB5BA",
            },
            "color": Object {
              "active": "#171A1C",
              "disabled": "#ABB5BA",
              "hover": "#171A1C",
              "normal": "#171A1C",
            },
          },
          "tagStyles": Object {
            "backgroundColor": Object {
              "gray": "#E3E6E8",
              "green": "#D6F5E0",
              "yellow": "#FFEECC",
            },
            "color": "#171A1C",
          },
          "thStyles": Object {
            "backgroundColor": Object {
              "normal": "#FFFFFF",
            },
            "color": Object {
              "normal": "#73848C",
            },
            "previewColor": Object {
              "normal": "#4F4FFF",
            },
          },
        }
      }
    >
      <List
        areTopicsFetching={false}
        clearTopicMessages={[MockFunction]}
        clearTopicsMessages={[MockFunction]}
        deleteTopic={[MockFunction]}
        deleteTopics={[MockFunction]}
        fetchTopicsList={
          [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "clusterName": undefined,
                  "orderBy": undefined,
                  "page": undefined,
                  "perPage": undefined,
                  "search": "",
                  "showInternal": true,
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        orderBy={null}
        search=""
        setTopicsOrderBy={[MockFunction]}
        setTopicsSearch={[MockFunction]}
        topics={Array []}
        totalPages={1}
      >
        <div>
          <div>
            <Styled(PageHeading)
              text="All Topics"
            >
              <PageHeading
                className="sc-jrAFXE hVcdFx"
                text="All Topics"
              >
                <div
                  className="sc-jrAFXE hVcdFx"
                >
                  <h1>
                    All Topics
                  </h1>
                  <div>
                    <Button
                      buttonSize="M"
                      buttonType="primary"
                      isLink={true}
                      to="/ui/clusters/undefined/topics/create-new"
                    >
                      <Link
                        to="/ui/clusters/undefined/topics/create-new"
                      >
                        <LinkAnchor
                          href="/ui/clusters/undefined/topics/create-new"
                          navigate={[Function]}
                        >
                          <a
                            href="/ui/clusters/undefined/topics/create-new"
                            onClick={[Function]}
                          >
                            <styled.button
                              buttonSize="M"
                              buttonType="primary"
                            >
                              <button
                                className="sc-pGacB iXeugt"
                              >
                                <i
                                  className="fas fa-plus"
                                />
                                 Add a Topic
                              </button>
                            </styled.button>
                          </a>
                        </LinkAnchor>
                      </Link>
                    </Button>
                  </div>
                </div>
              </PageHeading>
            </Styled(PageHeading)>
            <styled.div
              hasInput={true}
            >
              <div
                className="sc-kEjbQP dWGQHX"
              >
                <div>
                  <Search
                    handleSearch={[Function]}
                    placeholder="Search by Topic Name"
                    value=""
                  >
                    <Styled(Input)
                      defaultValue=""
                      inputSize="M"
                      leftIcon="fas fa-search"
                      onChange={[Function]}
                      placeholder="Search by Topic Name"
                      type="text"
                    >
                      <Input
                        className="sc-iBPTik bUenXA"
                        defaultValue=""
                        inputSize="M"
                        leftIcon="fas fa-search"
                        onChange={[Function]}
                        placeholder="Search by Topic Name"
                        type="text"
                      >
                        <div
                          className="sc-iBPTik bUenXA"
                        >
                          <styled.i
                            className="fas fa-search"
                            inputSize="M"
                            position="left"
                          >
                            <i
                              className="sc-eCstlR hIohXh fas fa-search"
                            />
                          </styled.i>
                          <styled.input
                            className="sc-iBPTik bUenXA"
                            defaultValue=""
                            hasLeftIcon={true}
                            inputSize="M"
                            onChange={[Function]}
                            placeholder="Search by Topic Name"
                            type="text"
                          >
                            <input
                              className="sc-jSgvzq BZWLZ sc-iBPTik bUenXA"
                              defaultValue=""
                              onChange={[Function]}
                              placeholder="Search by Topic Name"
                              type="text"
                            />
                          </styled.input>
                        </div>
                      </Input>
                    </Styled(Input)>
                  </Search>
                </div>
                <div>
                  <input
                    checked={true}
                    className="switch is-rounded"
                    id="switchRoundedDefault"
                    name="switchRoundedDefault"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label
                    htmlFor="switchRoundedDefault"
                  >
                    Show Internal Topics
                  </label>
                </div>
              </div>
            </styled.div>
          </div>
          <div>
            <styled.table
              isFullwidth={true}
            >
              <table
                className="sc-fubCzh jRHsOw"
              >
                <thead>
                  <tr>
                    <TableHeaderCell>
                      <styled.th
                        className=""
                      >
                        <th
                          className="sc-hKgJUU kwoanP"
                        >
                          <span
                            className="title"
                          />
                        </th>
                      </styled.th>
                    </TableHeaderCell>
                    <TableHeaderCell
                      handleOrderBy={[MockFunction]}
                      orderBy={null}
                      orderValue="NAME"
                      title="Topic Name"
                    >
                      <styled.th
                        className=""
                        handleOrderBy={[MockFunction]}
                        orderBy={null}
                        orderValue="NAME"
                        title="Topic Name"
                      >
                        <th
                          className="sc-hKgJUU kwoanP"
                          title="Topic Name"
                        >
                          <span
                            className="title"
                          >
                            Topic Name
                          </span>
                          <span
                            className="icon is-small is-clickable"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <i
                              className="fas fa-sort"
                            />
                          </span>
                        </th>
                      </styled.th>
                    </TableHeaderCell>
                    <TableHeaderCell
                      handleOrderBy={[MockFunction]}
                      orderBy={null}
                      orderValue="TOTAL_PARTITIONS"
                      title="Total Partitions"
                    >
                      <styled.th
                        className=""
                        handleOrderBy={[MockFunction]}
                        orderBy={null}
                        orderValue="TOTAL_PARTITIONS"
                        title="Total Partitions"
                      >
                        <th
                          className="sc-hKgJUU kwoanP"
                          title="Total Partitions"
                        >
                          <span
                            className="title"
                          >
                            Total Partitions
                          </span>
                          <span
                            className="icon is-small is-clickable"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <i
                              className="fas fa-sort"
                            />
                          </span>
                        </th>
                      </styled.th>
                    </TableHeaderCell>
                    <TableHeaderCell
                      handleOrderBy={[MockFunction]}
                      orderBy={null}
                      orderValue="OUT_OF_SYNC_REPLICAS"
                      title="Out of sync replicas"
                    >
                      <styled.th
                        className=""
                        handleOrderBy={[MockFunction]}
                        orderBy={null}
                        orderValue="OUT_OF_SYNC_REPLICAS"
                        title="Out of sync replicas"
                      >
                        <th
                          className="sc-hKgJUU kwoanP"
                          title="Out of sync replicas"
                        >
                          <span
                            className="title"
                          >
                            Out of sync replicas
                          </span>
                          <span
                            className="icon is-small is-clickable"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <i
                              className="fas fa-sort"
                            />
                          </span>
                        </th>
                      </styled.th>
                    </TableHeaderCell>
                    <TableHeaderCell
                      title="Replication Factor"
                    >
                      <styled.th
                        className=""
                        title="Replication Factor"
                      >
                        <th
                          className="sc-hKgJUU kwoanP"
                          title="Replication Factor"
                        >
                          <span
                            className="title"
                          >
                            Replication Factor
                          </span>
                        </th>
                      </styled.th>
                    </TableHeaderCell>
                    <TableHeaderCell
                      title="Number of messages"
                    >
                      <styled.th
                        className=""
                        title="Number of messages"
                      >
                        <th
                          className="sc-hKgJUU kwoanP"
                          title="Number of messages"
                        >
                          <span
                            className="title"
                          >
                            Number of messages
                          </span>
                        </th>
                      </styled.th>
                    </TableHeaderCell>
                    <TableHeaderCell
                      title="Size"
                    >
                      <styled.th
                        className=""
                        title="Size"
                      >
                        <th
                          className="sc-hKgJUU kwoanP"
                          title="Size"
                        >
                          <span
                            className="title"
                          >
                            Size
                          </span>
                        </th>
                      </styled.th>
                    </TableHeaderCell>
                    <TableHeaderCell>
                      <styled.th
                        className=""
                      >
                        <th
                          className="sc-hKgJUU kwoanP"
                        >
                          <span
                            className="title"
                          />
                        </th>
                      </styled.th>
                    </TableHeaderCell>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td
                      colSpan={10}
                    >
                      No topics found
                    </td>
                  </tr>
                </tbody>
              </table>
            </styled.table>
            <Pagination
              totalPages={1}
            >
              <styled.nav
                aria-label="pagination"
                role="navigation"
              >
                <nav
                  aria-label="pagination"
                  className="sc-dlfnuX dQAJar"
                  role="navigation"
                >
                  <button
                    className="pagination-btn"
                    disabled={true}
                    type="button"
                  >
                    Previous
                  </button>
                  <button
                    className="pagination-btn"
                    disabled={true}
                    type="button"
                  >
                    Next
                  </button>
                </nav>
              </styled.nav>
            </Pagination>
          </div>
        </div>
      </List>
    </Component>
  </Router>
</StaticRouter>
`;
